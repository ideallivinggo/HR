<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper路径-->
<mapper namespace="com.aaa.rzhr.dao.YapplyMapper">


    <!--查看职业-->
    <select id="queryAllPos" resultType="Position">
       select * from position
    </select>
    <!--查看部门-->
    <select id="queryAllDept" resultType="Dept">
        select * from dept
    </select>
    <!--查看员工申请人-->
    <select id="queryAllEmp" resultType="Emp">
        select * from emp e inner join dept d on e.deptid=d.deptid where e.deptid=1
    </select>
    <!--添加招聘申请-->
    <insert id="addRec" parameterType="Recruitment">
        INSERT  INTO recruitment(rectitle, empid, deptid, recaddress, poid, recnumber, recreachdate, recsex,
                                  receducation, recage, recsuffer, recmajor, recrequire, recstate)
           values(#{rectitle}, #{empid}, #{deptid}, #{recaddress}, #{poid}, #{recnumber}, #{recreachdate}, #{recsex},
                  #{receducation}, #{recage}, #{recsuffer}, #{recmajor}, #{recrequire}, #{recstate} )
    </insert>
    <!--查看招聘信息-->
    <select id="queryAllRec" resultType="java.util.Map" parameterType="Map">
        SELECT * FROM  recruitment r
        LEFT JOIN emp e ON r.empid = e.empid
        LEFT JOIN dept d ON r.deptid = d.deptid
        LEFT JOIN position p ON r.poid = p.poid
        WHERE 1 = 1
            <if test="recid != null">
                AND recid = #{recid}
            </if>
            <if test="recstate != null">
                AND recstate = #{recstate}
            </if>

    </select>
    <!--修改招聘需求-->
    <update id="updateRec" parameterType="Recruitment">
        UPDATE recruitment SET
        <if test="recnumber != null"> recnumber=#{recnumber}, </if>
        <if test="recsex != null"> recsex=#{recsex}, </if>
        <if test="receducation != null"> receducation= #{receducation}, </if>
        <if test="recage != null"> recage=#{recage}, </if>
        <if test="recsuffer != null"> recsuffer=#{recsuffer}, </if>
        <if test="recmajor != null"> recmajor=#{recmajor},</if>
        <if test="recrequire != null">  recrequire=#{recrequire}, </if>
        <if test="recstate != null">  recstate=#{recstate} </if>
         WHERE recid=#{recid}
    </update>



    <!--添加简历-->
    <insert id="addResEntering" parameterType="Resume">
        INSERT INTO resume(resumename, sex, education, age, phone, resmajor, resposition, emali, resdate, resstate)
        VALUES (#{resumename}, #{sex}, #{education}, #{age}, #{phone}, #{resmajor}, #{resposition}, #{emali}, #{resdate}, #{resstate})
    </insert>
    <!--查看简历-->
    <select id="queryAllRes"  resultType="java.util.Map" parameterType="Map">
        select * from resume WHERE  1 = 1
        <choose>
            <when test="resid != null">
                AND resid = #{resid}
            </when>
            <otherwise>
                <if test="resstate != null">
                    AND resstate = #{resstate}
                </if>
                <if test="education != ''">
                    AND education = #{education}
                </if>
                <if test="sex != ''">
                    AND sex = #{sex}
                </if>
            </otherwise>
        </choose>
    </select>
    <!--简历筛选选中-->
    <update id="updateResOne" parameterType="Map">
        UPDATE resume set resstate = ${resstate}  WHERE resid in (${s})
    </update>





    <!--添加第一次面试-->
    <insert id="addIntone" parameterType="Interviewone">
        INSERT  INTO interviewone(resid, inograde, inodate, inonotes, inname, inostate,
        inoone, inotwo, inothree, inofour, inofive, inosix, inoseven, inoeight, inonine, inoten)
        VALUES (#{resid}, #{inograde}, #{inodate}, #{inonotes}, #{inname}, #{inostate},
        #{inoone}, #{inotwo}, #{inothree}, #{inofour}, #{inofive}, #{inosix}, #{inoseven}, #{inoeight}, #{inonine}, #{inoten})
    </insert>
    <!--查看第一次面试-->
    <select id="queryAllInte" resultType="java.util.Map" parameterType="Map">
        SELECT r.*, i.inoid, i.inograde, i.inonotes, i.inname, i.inostate, i.inoone, i.inotwo,
        i.inothree, i.inofour, i.inofive, i.inosix, i.inoseven, i.inoeight, i.inonine, i.inoten,
        str_to_date(i.inodate,'%Y-%m-%d') AS inodate FROM interviewone i
        INNER JOIN resume r ON i.resid = r.resid WHERE 1=1
        <choose>
            <when test="inoid != null">
                AND inoid = #{inoid}
            </when>
            <otherwise>
                <if test="inostate != null">
                    AND inostate = #{inostate}
                </if>
                ORDER BY inodate
            </otherwise>
        </choose>
    </select>
    <!--修改第一次面试-->
    <update id="updateInte" parameterType="Interviewone">
         UPDATE interviewone SET
        <if test="inograde != null"> inograde=#{inograde}, </if>
        <if test="inname != null"> inname=#{inname}, </if>
        <if test="inonotes != null"> inonotes=#{inonotes}, </if>
        <if test="inoone != null"> inoone=#{inoone}, </if>
        <if test="inotwo != null"> inotwo=#{inotwo}, </if>
        <if test="inothree != null"> inothree=#{inothree}, </if>
        <if test="inofour != null"> inofour=#{inofour}, </if>
        <if test="inofive != null"> inofive=#{inofive}, </if>
        <if test="inosix != null"> inosix=#{inosix}, </if>
        <if test="inoseven != null"> inoseven=#{inoseven}, </if>
        <if test="inoeight != null"> inoeight=#{inoeight}, </if>
        <if test="inonine != null"> inonine=#{inonine}, </if>
        <if test="inoten != null"> inoten=#{inoten}, </if>
        <if test="inostate != null"> inostate=#{inostate}</if>
         WHERE inoid=#{inoid}
    </update>




    <!--添加第二次面试-->
    <insert id="addIntTwo" parameterType="Interviewtwo">
        INSERT INTO interviewtwo(resid, intgrade, intdate, intnotes, intname, intstate,
        intone, inttwo, intthree, intfour, intfive, intsix, intseven, inteight, intnine, intten)
        VALUES (#{resid}, #{intgrade}, #{intdate}, #{intnotes}, #{intname}, #{intstate},
         #{intone}, #{inttwo}, #{intthree}, #{intfour}, #{intfive}, #{intsix}, #{intseven}, #{inteight}, #{intnine}, #{intten})
    </insert>
    <!--查看第二次面试-->
    <select id="queryAllInteTwo" resultType="java.util.Map" parameterType="Map">
        SELECT r.*, i.intid, i.intgrade, i.intnotes, i.intname, i.intstate, i.intone, i.inttwo,
        i.intthree, i.intfour, i.intfive, i.intsix, i.intseven, i.inteight, i.intnine, i.intten,
        str_to_date(intdate,'%Y-%m-%d') intdate FROM interviewtwo i
        INNER JOIN resume r ON i.resid = r.resid WHERE 1=1
        <choose>
            <when test="intid != null">
                AND intid = #{intid}
            </when>
            <otherwise>
                <if test="intstate != null">
                    AND intstate = #{intstate}
                </if>
                ORDER BY intdate
            </otherwise>
        </choose>
    </select>
    <!--修改第二次面试-->
    <update id="updateInteTwo" parameterType="Interviewtwo">
        UPDATE interviewtwo SET
        <if test="intgrade != null"> intgrade=#{intgrade}, </if>
        <if test="intname != null"> intname=#{intname}, </if>
        <if test="intnotes != null"> intnotes=#{intnotes}, </if>
        <if test="intone != null"> intone=#{intone}, </if>
        <if test="inttwo != null"> inttwo=#{inttwo}, </if>
        <if test="intthree != null"> intthree=#{intthree}, </if>
        <if test="intfour != null"> intfour=#{intfour}, </if>
        <if test="intfive != null"> intfive=#{intfive}, </if>
        <if test="intsix != null"> intsix=#{intsix}, </if>
        <if test="intseven != null"> intseven=#{intseven}, </if>
        <if test="inteight != null"> inteight=#{inteight}, </if>
        <if test="intnine != null"> intnine=#{intnine}, </if>
        <if test="intten != null"> intten=#{intten}, </if>
        <if test="intstate != null"> intstate=#{intstate}</if>
        WHERE intid=#{intid}
    </update>
    <!--面试完成推送-->
    <update id="inteTwoPash" parameterType="Map">
        UPDATE interviewtwo set intstate = ${intstate}  WHERE intid in (${s})
    </update>




    <!--获取最大的员工激活编号-->
    <select id="queryActID" parameterType="int" resultType="java.util.Map">
        SELECT actid FROM activation WHERE actid=(SELECT MAX(actid) FROM activation)
    </select>
    <!--录取后添加到员工激活表-->
    <insert id="addAct" parameterType="Activation">
        INSERT  INTO activation(resid, actname, actnumber, actpwd, actdate, actstate)
        VALUES (#{resid}, #{actname}, #{actnumber}, #{actpwd}, #{actdate}, #{actstate})
    </insert>
    <!--判断-->
    <select id="judge" parameterType="Activation" resultType="Activation">
        SELECT actpwd FROM activation WHERE actnumber = #{actnumber}
    </select>

    <!--员工激活-->
    <update id="updateAct" parameterType="Activation">
        UPDATE activation set actpwd = ${actpwd}, actstate = ${actstate} WHERE actnumber = #{actnumber}
    </update>

    <!--激活详情-->
    <select id="queryAllAct" parameterType="Activation" resultType="java.util.Map">
        SELECT * FROM activation a LEFT JOIN resume r ON a.resid = r.resid WHERE 1 = 1
        <if test="actstate != null">
            AND actstate = #{actstate}
        </if>
    </select>

    <!--撤出-->
    <update id="ccAct" parameterType="Activation">
        UPDATE activation set actstate = ${actstate} WHERE actid = #{actid}
    </update>







    <!--待入职统计-->
    <select id="countAct" resultType="java.util.Map">
        SELECT  COUNT(actstate) AS countnum FROM activation where actstate = 1
    </select>

    <!--统计员工类型-->
    <select id="countEmpState" resultType="java.util.Map">
        SELECT COUNT(empstateid) AS countstate FROM emp GROUP BY empstateid
    </select>

    <!--合同到期提醒小于或者等于当前日期-->
    <select id="countContract" resultType="java.util.Map">
        SELECT COUNT(conid) AS countnum FROM contract where conover &lt;= (select current_date as Systemtime);
    </select>

    <!--加班审批-->
    <select id="countOvertime" resultType="java.util.Map">
        SELECT COUNT(apovstate) AS countnum FROM apply_overtime where apovstate = 0
    </select>

    <!--离职审批-->
    <select id="countDimission" resultType="java.util.Map">
        SELECT COUNT(dimstate) AS countnum FROM apply_dimission where dimstate = 0
    </select>

    <!--休假审批-->
    <select id="countLeave" resultType="java.util.Map">
        SELECT COUNT(leasate) AS countnum FROM apply_leave where leasate = 0
    </select>

    <!--公告栏-->
  <!--  <select id="queryAllMes" resultType="">
        SELECT * FROM rzmessage WHERE begintime = '2018-11-04' AND mestate = 2 AND deptid = 2
    </select>-->



    <!--培训管理-->

    <!--培训课程审核-->
    <select id="queryAllkec" parameterType="Kecheng" resultType="java.util.Map">
        SELECT * FROM kecheng WHERE 1 =1
        <if test="kestate != null">
            and kestate = #{kestate}
        </if>
        <if test="keid != null">
            and keid = #{keid}
        </if>
    </select>
    <!--查看培训老师-->
    <select id="queryAllket" parameterType="Keteacher" resultType="java.util.Map">
        SELECT * from keteacher  kt JOIN emp  e ON kt.empid=e.empid WHERE 1 =1
        <if test="keid != null">
            and keid = #{keid}
        </if>
    </select>

    <!--审批-->
    <update id="updatekec" parameterType="Kecheng">
        UPDATE kecheng SET kestate = #{kestate} WHERE keid = #{keid}
    </update>

    <!--员工培训记录-->
    <select id="queryAllkee" parameterType="Map" resultType="java.util.Map">
        SELECT kc.*, em.empname FROM kecheng kc
        INNER JOIN keteacher kt ON kc.keid = kt.keid
        INNER JOIN emp em ON em.empid = kt.empid
        WHERE 1 = 1
        <if test="kestate != null">
            and kc.kestate = #{kestate}
        </if>
        <if test="empid != null">
            and em.empid = #{empid}
        </if>
    </select>
    <!--查询培训课程员工-->
    <select id="queryAllkeemp" parameterType="Map" resultType="java.util.Map">
        SELECT km.*, kc.kename, em.empname, em.empnumber FROM keemp AS km
        INNER JOIN kecheng kc ON km.keid = kc.keid
        INNER JOIN emp em ON km.empid = em.empid
        WHERE 1 = 1
        <choose>
            <when test="keempid != null">
                    and km.keempid = #{keempid}
            </when>
            <otherwise>
                <if test="keid != null">
                    and km.keid = #{keid}
                </if>
                <if test="keokstate != null">
                    and km.keokstate = #{keokstate}
                </if>
                <if test="empnumber != ''">
                    and em.empnumber = #{empnumber}
                </if>
            </otherwise>
        </choose>
    </select>
    <!--打分-->
    <update id="dafen" parameterType="Keemp">
        UPDATE keemp SET
        <if test="kepingyu != ''">
            kepingyu = #{kepingyu},
        </if>
        <if test="keokstate != null">
            keokstate = #{keokstate},
        </if>
        <if test="kefenshuo != null">
            kefenshuo = #{kefenshuo},
        </if>
        <if test="kepingjiatime != ''">
            kepingjiatime = #{kepingjiatime}
        </if>
         WHERE keempid = #{keempid}
    </update>

    <!--剩余打分人数-->
    <select id="shengyu" resultType="java.util.Map" parameterType="Map">
       SELECT COUNT(keokstate) AS sheng FROM keemp where keokstate = 0 AND keid = #{keid}
    </select>
    <!--培训完成-->
    <update id="wancheng" parameterType="Kecheng">
        UPDATE kecheng SET kestate = 4  WHERE keid = #{keid}
    </update>

</mapper>