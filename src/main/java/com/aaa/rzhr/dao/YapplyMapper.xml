<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper路径-->
<mapper namespace="com.aaa.rzhr.dao.YapplyMapper">


    <!--查看职业-->
    <select id="queryAllPos" resultType="Position">
       select * from position
    </select>
    <!--查看部门-->
    <select id="queryAllDept" resultType="Dept">
        select * from dept
    </select>
    <!--查看员工申请人-->
    <select id="queryAllEmp" resultType="Emp">
        select * from emp e inner join dept d on e.deptid=d.deptid where e.deptid=4
    </select>
    <!--添加招聘申请-->
    <insert id="addRec" parameterType="Recruitment">
        INSERT  INTO recruitment(empid, deptid, recaddress, poid, recnumber, recreachdate, recsex,
                                  receducation, recage, recsuffer, recmajor, recrequire, recstate)
           values(#{empid}, #{deptid}, #{recaddress}, #{poid}, #{recnumber}, #{recreachdate}, #{recsex},
                  #{receducation}, #{recage}, #{recsuffer}, #{recmajor}, #{recrequire}, #{recstate} )
    </insert>
    <!--查看招聘信息-->
    <select id="queryAllRec" resultType="java.util.Map" parameterType="int">
        SELECT * FROM  recruitment r
        LEFT JOIN emp e ON r.empid = e.empid
        LEFT JOIN dept d ON r.deptid = d.deptid
        LEFT JOIN position p ON r.poid = p.poid
        WHERE 1 = 1
        <if test="_parameter != null">
           AND recid = #{_parameter}
        </if>
    </select>
    <!--修改招聘需求-->
    <update id="updateRec" parameterType="Recruitment">
        UPDATE recruitment SET  recreachdate=#{recreachdate}, recsex=#{recsex},receducation= #{receducation}, recage=#{recage},
         recsuffer=#{recsuffer}, recmajor=#{recmajor}, recrequire=#{recrequire}
         WHERE recid=#{recid}
    </update>



    <!--添加简历-->
    <insert id="addResEntering" parameterType="Resume">
        INSERT INTO resume(resumename, sex, education, age, phone, resmajor, resposition, emali, resdate, resstate)
        VALUES (#{resumename}, #{sex}, #{education}, #{age}, #{phone}, #{resmajor}, #{resposition}, #{emali}, #{resdate}, #{resstate})
    </insert>
    <!--查看简历-->
    <select id="queryAllRes"  resultType="java.util.Map" parameterType="Map">
        select * from resume WHERE  1 = 1
        <choose>
            <when test="resid != null">
                AND resid = #{resid}
            </when>
            <otherwise>
                <if test="resstate != null">
                    AND resstate = #{resstate}
                </if>
                <if test="education != ''">
                    AND education = #{education}
                </if>
                <if test="sex != ''">
                    AND sex = #{sex}
                </if>
            </otherwise>
        </choose>
    </select>
    <!--简历筛选选中-->
    <update id="updateResOne" parameterType="Map">
        UPDATE resume set resstate = ${resstate}  WHERE resid in (${s})
    </update>





    <!--添加第一次面试-->
    <insert id="addIntone" parameterType="Interviewone">
        INSERT  INTO interviewone(resid, inograde, inodate, inonotes, inname, inostate)
        VALUES (#{resid}, #{inograde}, #{inodate}, #{inonotes}, #{inname}, #{inostate})
    </insert>
    <!--查看第一次面试-->
    <select id="queryAllInte" resultType="java.util.Map" parameterType="Map">
        SELECT r.*, i.inoid,i.inograde, i.inonotes, i.inname, i.inostate,
        str_to_date(inodate,'%Y-%m-%d') inodate FROM interviewone i
        INNER JOIN resume r ON i.resid = r.resid WHERE 1=1
        <choose>
            <when test="inoid != null">
                AND inoid = #{inoid}
            </when>
            <otherwise>
                <if test="inostate != null">
                    AND inostate = #{inostate}
                </if>
                ORDER BY inodate
            </otherwise>
        </choose>
    </select>
    <!--修改第一次面试-->
    <update id="updateInte" parameterType="Interviewone">
         UPDATE interviewone SET
        <if test="inograde != null">
            inograde=#{inograde},
        </if>
        <if test="inname != null">
            inname=#{inname},
        </if>
        <if test="inonotes != null">
            inonotes=#{inonotes},
        </if>
        <if test="inostate != null">
            inostate=#{inostate}
        </if>
         WHERE inoid=#{inoid}
    </update>




    <!--添加第二次面试-->
    <insert id="addIntTwo" parameterType="Interviewtwo">
        INSERT INTO interviewtwo(resid, intgrade, intdate, intnotes, intname, intstate)
        VALUES (#{resid}, #{intgrade}, #{intdate}, #{intnotes}, #{intname}, #{intstate})
    </insert>
    <!--查看第二次面试-->
    <select id="queryAllInteTwo" resultType="java.util.Map" parameterType="Map">
        SELECT r.*, i.intid, i.intgrade, i.intnotes, i.intname, i.intstate,
        str_to_date(intdate,'%Y-%m-%d') intdate FROM interviewtwo i
        INNER JOIN resume r ON i.resid = r.resid WHERE 1=1
        <choose>
            <when test="intid != null">
                AND intid = #{intid}
            </when>
            <otherwise>
                <if test="intstate != null">
                    AND intstate = #{intstate}
                </if>
                ORDER BY intdate
            </otherwise>
        </choose>
    </select>
    <!--修改第二次面试-->
    <update id="updateInteTwo" parameterType="Interviewtwo">
        UPDATE interviewtwo SET
        <if test="intgrade != null">
            intgrade=#{intgrade},
        </if>
        <if test="intname != null">
            intname=#{intname},
        </if>
        <if test="intnotes != null">
            intnotes=#{intnotes},
        </if>
        <if test="intstate != null">
            intstate=#{intstate}
        </if>
        WHERE intid=#{intid}
    </update>



    <!--面试完成推送-->
    <update id="inteTwoPash" parameterType="Map">
        UPDATE interviewtwo set intstate = ${intstate}  WHERE intid in (${s})
    </update>
    <!--添加员工到待入职状态-->
    <select id="addEmp" parameterType="Emp">
        INSERT INTO emp (empnumber, empname, mppicture, typeid, idnumber, sex, birthdate, nation,
        accounttype, eduid, address, politics, qqnumber, phone, password, salt, email, urgencyphone,
        urgencyname, empnotes, deptid, poid, emptypeid, emppay, empstateid, empstatedate)
        VALUES (#{empnumber}, #{empname}, #{mppicture}, #{typeid}, #{idnumber}, #{sex}, #{birthdate},
        #{nation}, #{accounttype}, #{eduid}, #{address}, #{politics}, #{qqnumber}, #{phone},
        #{password}, #{salt}, #{email}, #{urgencyphone}, #{urgencyname}, #{empnotes}, #{deptid}, #{poid},
        #{emptypeid}, #{emppay}, #{empstateid}, #{empstatedate})
    </select>
    <!--获取最大的员工编号-->
    <select id="queryEmpID" parameterType="int" resultType="java.util.Map">
        SELECT empid FROM emp WHERE empid=(SELECT MAX(empid) FROM emp)
    </select>


</mapper>